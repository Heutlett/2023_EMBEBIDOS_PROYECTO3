- Crear el toolchain con el siguiente comando:

	bitbake rpi-basic-image -c populate_sdk

-Instalar el SDK installer en el directorio /home/heutlett/yocto/poky-dunfell-23.0.2/emuRaspberry/tmp/deploy/sdk mediante el comando:
	
	cd tmp/deploy/sdk/
	./poky-glibc-x86_64-rpi-basic-image-cortexa7t2hf-neon-vfpv4-raspberrypi2-toolchain-3.1.2.sh

-Cargar variables de entorno del sistema en la raiz del directorio de la biblioteca:
	
	 . /opt/poky/3.1.2/environment-setup-cortexa7t2hf-neon-vfpv4-poky-linux-gnueabi

-Comprobar que se cargaron las variables de entorno:

	echo $CC

	Se debe ver asi:

		arm-poky-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/opt/poky/3.1.2/sysroots/cortexa7t2hf-neon-vfpv4-poky-linux-gnueabi

-Crear un directorio /build en la raiz de la biblioteca

-Crear un directorio /build en la raiz de la biblioteca

-Ingresar a /build y ejecutar:
	(Se deberia comprobar en el archivo /opt/poky/3.1.2/environment-setup-cortexa7t2hf-neon-vfpv4-poky-linux-gnueabi cual es la version de gnuabi que utiliza)

	../configure --prefix=/home/heutlett/libmygpio/usr/ --host=arm-poky-linux-gnueabi

-Ahora ejecutar el makefile:
	(nota: a veces es necesario ejecutar make clean previo al make)
	(nota: a veces es necesario editar el .bb de la receta para agregar dependencias, por ejemplo: DEPENDS = "gstreamer1.0")	

	-make

-Ejecutar "make install" en build

-Para generar el .tar.gz ejecutar el comando sudo make distcheck en el directorio build.

	

	
